// Code generated by hertz generator.

package sys

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	base "kcers/idl_gen/model/base"
	sys "kcers/idl_gen/model/sys"
)

// ProductList .
// @router /api/sys/product/list [POST]
func ProductList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// PropertyList .
// @router /api/sys/property/list [POST]
func PropertyList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// PropertyType .
// @router /api/sys/property/type [POST]
func PropertyType(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// VenueList .
// @router /api/sys/venue/list [POST]
func VenueList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// MemberList .
// @router /api/sys/member/list [POST]
func MemberList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// ContractList .
// @router /api/sys/contract/list [POST]
func ContractList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// StaffList .
// @router /api/sys/staff/list [POST]
func StaffList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// PlaceList .
// @router /api/sys/place/list [POST]
func PlaceList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// RoleList .
// @router /api/sys/role/list [POST]
func RoleList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req sys.SysListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}
